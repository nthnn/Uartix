doctype html
html(lang="en")
  head
    title Uartix | Getting Started

    meta(name="description", content="Uartix Official Documentation")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")

    link(href="styles/customvars.sass", rel="stylesheet")
    link(href="node_modules/bootswatch/dist/yeti/bootstrap.min.css", rel="stylesheet")
    link(href="styles/global.sass", rel="stylesheet")
    link(href="favicon.ico", rel="shortcut icon")

  body(class="bg-secondary")
    div(class="container")
      br
      br

      div(class="bg-white border border-primary shadow-lg")
        br
        br

        div(align="center", class="mt-4 mb-4")
          div(class="col-lg-7 col-10")
            img(src="assets/uartix.png", class="shadow", width="125")
            br
            br
            h1(class="mb-2 fw-bold") Uartix Programming Language
            p(class="lead") /wor&middot;tiks/
            blockquote(class="text-muted") Strange dynamic programming and scripting language that performs mathematical computations on a connected Raspberry Pi Pico (RP2040) through UART connectivity.

        br
        br

        header(class="header sticky-top")
          nav(class="navbar navbar-expand-lg bg-primary", data-bs-theme="dark")
            div(class="container-fluid")
              a(class="navbar-fluid", href="#")
              div(class="w-100 mobile-only", align="center")
                button(
                  class="navbar-toggler",
                  type="button",
                  data-bs-toggle="collapse",
                  data-bs-target="#main-navbar",
                  aria-controls="main-navbar",
                  aria-expanded="false",
                  aria-label="Toggle navigation")
                  span(class="navbar-toggler-icon")
              button(
                class="navbar-toggler desktop-only",
                type="button",
                data-bs-toggle="collapse",
                data-bs-target="#main-navbar",
                aria-controls="main-navbar",
                aria-expanded="false",
                aria-label="Toggle navigation")
                span(class="navbar-toggler-icon")
              div(class="collapse navbar-collapse", id="main-navbar", align="center")
                br(class="mobile-only")
                ul(class="navbar-nav me-auto mb-2 mb-lg-0 d-md-flex d-block flex-row mx-md-auto mx-0")
                  li(class="nav-item")
                    a(class="nav-link", href="index.pug") Home
                  li(class="nav-item")
                    a(class="nav-link active fw-bold", href="#") Getting Started
                  li(class="nav-item")
                    a(class="nav-link", href="grammar.pug") Grammar Definition
                  li(class="nav-item")
                    a(class="nav-link", href="constructs.pug") Language Constructs
                  li(class="nav-item")
                    a(class="nav-link", href="https://github.com/nthnn/Uartix", target="_blank") GitHub

        br(class="desktop-only")
        br

        div(class="container")
          div(class="row")
            div(class="col-lg-2")

            div(class="col-lg-8")
              h4(class="border-bottom pb-2 fw-bold") Getting Started 
              p Before installing Uartix, make sure you have JDK 22 (or OpenJDK) installed on your system. Follow the steps below to get started on different operating systems and to build various components from the source.
              br

              h5(class="border-bottom pb-2 fw-bold") Installing Uartix

              b(class="pb-2") Linux
              ol
                li <b>Download the <code class="d-inline text-dark border border-dark px-1 fw-normal">.deb</code> File</b>: Go to the <a href="https://github.com/nthnn/Uartix/releases" class="text-decoration-none" target="_blank">release page</a> and download the latest <code class="d-inline text-dark border border-dark px-1">*.deb</code> file for Uartix.
                li
                  p <b>Install Uartix</b>: Open your terminal and navigate to the directory where the <code class="d-inline text-dark border border-dark px-1 fw-normal">.deb</code> file is located. Run the following command to install Uartix:
                  div(class="bg-primary w-100")
                    p(class="text-white m-0 ms-2") Terminal
                  code(class="text-dark")
                    pre(class="border border-primary p-2")
                      | sudo dpkg -i uartix_*.deb
                li <b>Running Uartix</b>: After successfully install the <code class="d-inline text-dark border border-dark px-1 fw-normal">.deb</code> package, you can now run the command uartix on your terminal.
              br

              b(class="pb-2") Windows
              ol 
                li <b>Download the <code class="d-inline text-dark border border-dark px-1 fw-normal">.zip</code> File</b>: Go to the <a href="https://github.com/nthnn/Uartix/releases" class="text-decoration-none" target="_blank">release page</a> and download the latest <code class="d-inline text-dark border border-dark px-1">.zip</code> file for Windows.
                li <b>Extract the File</b>: Extract the contents of the <code class="d-inline text-dark border border-dark px-1">.zip</code> file to <code class="d-inline text-dark border border-dark px-1">C:\uartix</code>.
                li <b>Set Environment Path</b> Add <code class="d-inline text-dark border border-dark px-1">C:\uartix\bin</code> to your Environment Path variables to ensure you can run Uartix from any command prompt.
              br

              b(class="pb-2") Firmware Installation 
              p To install the Uartix firmware on your Raspberry Pi Pico, follow these steps:
              ol
                li <b>Enter Flash Mode</b>: Connect your Raspberry Pi Pico to your system while holding the <code class="d-inline text-dark border border-dark px-1">BOOTSEL</code> button to enter flash mode.
                li <b>Download the UF2 Binary</b>: Download the UF2 binary of the Uartix firmware from the <a href="https://github.com/nthnn/Uartix/releases" class="text-decoration-none" target="_blank">release page</a>.
                li <b>Install the Firmware</b>: Drag and drop the downloaded UF2 file into the Raspberry Pi Pico storage that appears on your computer.
              br

              h5(class="border-bottom pb-2 fw-bold") Building from Source

              b(class="pb-2") Interpreter
              p To build the interpreter:
              ol
                li <b>Open in IntelliJ</b>: Open the Uartix repository in IntelliJ IDEA.
                li <b>Build Artifacts</b>: From the menu, go to <code class="d-inline text-dark border border-dark px-1">Build</code> menu item and select <code class="d-inline text-dark border border-dark px-1">Build Artifacts &gt; Build</code>.
              br

              b(class="pb-2") Launcher
              p On Ubuntu, to build the Uartix launcher, ensure you have Rust and cargo installed on your system. Follow these steps:
              ol
                li
                  b Install Dependencies:
                  div(class="bg-primary w-100 mt-2")
                    p(class="text-white m-0 ms-2") Terminal
                  code(class="text-dark")
                    pre(class="border border-primary p-2")
                      | sudo apt-get install mingw-w64
                      | rustup target add x86_64-pc-windows-gnu
                li <b>Build the Launcher</b>: Run the following commands to build the launcher:
                  div(class="bg-primary w-100 mt-2")
                    p(class="text-white m-0 ms-2") Terminal
                  code(class="text-dark")
                    pre(class="border border-primary p-2")
                      | cargo build --release
                      | cargo build --release --target x86_64-pc-windows-gnu
              br

              b(class="pb-2") Firmware
              p To build the Uartix firmware from source, simply follow the steps below.
              ol 
                li <b>Installing Raspberry Pi Pico on Arduino IDE</b>: Install the Raspberry Pi Pico boards on your Arduino IDE by following the steps <a href="https://randomnerdtutorials.com/programming-raspberry-pi-pico-w-arduino-ide/" class="text-decoration-none" target="_blank">here</a>.
                li <b>Open in Arduino IDE</b>: Open the file <a href="https://github.com/nthnn/Uartix/blob/main/picoware/picoware.ino" class="text-decoration-none" target="_blank">picoware/picoware.ino</a> in your Arduino IDE.
                li <b>Build & Upload</b>: Connect your Raspberry Pi Pico board on flash mode then upload and build the Picoware on your Arduino IDE.

            div(class="col-lg-2")

        br
        br

      br
      div(align="center")
        small Copyright 2024 &copy; <a href="https://github.com/nthnn" target="_blank" class="text-decoration-none">Nathanne Isip</a>
      br

    script(src="node_modules/bootstrap/dist/js/bootstrap.bundle.min.js")
